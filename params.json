{"name":"Mkpostgres","tagline":"Make a persistent postgres container PDQ","body":"# mkpostgres\r\nMake a persistent postgres container PDQ!\r\n\r\n\r\n### Usage\r\n\r\n#### Initialization or Temp use\r\n\r\n`make temp` will make a temporary ephemeral fresh postgresql instance\r\n\r\n`make templogs` to watch the postgresql process startup and initialize its databases\r\n\r\nyou now have a fresh postgres install to experiment with \r\nyou can stop here and start playing with postgres IF you do not need persistent data\r\n\r\n### Persisten Data\r\n\r\nwhen the initialization of the temp container finishes (not before) you can then\r\n`make grab` which will make a `datadir` in the current directory and copy out `/var/lib/postgresql` out\r\nof the temporary container to be used in a persistent setup\r\n\r\nat this point you can move the datadir wherever you so desire,\r\njust be sure and update the `POSTGRES_DATADIR` file in this directory\r\nas that is how the makefile knows where to mount from\r\n\r\n#### Removal of the temp container\r\n\r\n`make rmtemp` will clean up our temporary container, but will not delete the `datadir`\r\n\r\n#### Production\r\n\r\nWe are now set to start our persistent database\r\n\r\n`make prod` will then use the `datadir` and start up our container in persistent mode\r\n\r\n#### Import\r\n\r\nalternative to `make temp` is the `make import` which will mount docker-entrypoint-initdb.d into \r\nthe container, at which point entry-point.sh will execute everything in there that ends in `.sh` or `.sql`\r\n\r\n#### Restart\r\n\r\nrestart the container with `make rm` followed by `make prod`\r\n\r\n#### Migration\r\n\r\nto migrate simply tar up this directory along with the datadir and move to the new docker host\r\n","google":"UA-69335315-1","note":"Don't delete this file! It's used internally to help with page regeneration."}